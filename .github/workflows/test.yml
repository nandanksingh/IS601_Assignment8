# ----------------------------------------------------------
# Author: Nandan Kumar
# Date: 10/27/2025
# Assignment-8: FastAPI Calculator
# File: .github/workflows/test.yml
# ----------------------------------------------------------
# Description:
# CI/CD pipeline for FastAPI Calculator project.
# Runs unit, integration, and E2E tests with pytest,
# performs a Docker security scan, and deploys image
# to DockerHub if tests pass successfully.
# ----------------------------------------------------------

name: FastAPI Calculator CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # --------------------------------------------------------
  #  TEST JOB — Unit, Integration, and E2E
  # --------------------------------------------------------
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          playwright install --with-deps

      # Run backend tests with coverage enforcement
      - name: Run unit and integration tests
        run: |
          pytest tests/unit tests/integration --cov=app --cov-report=term-missing --cov-fail-under=90

      # Run E2E browser tests separately (no coverage enforcement)
      - name: Run E2E browser tests
        run: |
          pytest tests/e2e -m "e2e" --headed -v --no-cov

      - name: Generate coverage report
        run: pytest --cov=app --cov-report=html

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov

  # --------------------------------------------------------
  #  SECURITY JOB — Scan Docker image for vulnerabilities
  # --------------------------------------------------------
  security:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t app:test .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'app:test'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

  # --------------------------------------------------------
  #  DEPLOY JOB — Push image to DockerHub
  # --------------------------------------------------------
  deploy:
    needs: security
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            nandanksingh/module8_fastapi_calculator:latest
            nandanksingh/module8_fastapi_calculator:${{ github.sha }}
          platforms: linux/amd64,linux/arm64
