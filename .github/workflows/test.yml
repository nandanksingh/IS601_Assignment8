# ----------------------------------------------------------
# Author: Nandan Kumar
# Date: 10/27/2025
# Assignment-8: FastAPI Calculator
# File: .github/workflows/ci.yml
# ----------------------------------------------------------
# Description:
# Continuous Integration (CI) and Continuous Deployment (CD)
# workflow for FastAPI Calculator.
# 
# Steps:
#  Runs unit, integration, and E2E tests automatically.
#  Scans Docker image for security vulnerabilities.
#  Builds and deploys the Docker image to DockerHub.
# ----------------------------------------------------------

name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # --------------------------------------------------------
  # TEST JOB — Runs all tests using pytest and Playwright
  # --------------------------------------------------------
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Set up Python environment
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      # Cache pip and virtual environment to speed up builds
      - uses: actions/cache@v3
        with:
          path: |
            venv
            ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Install Python and Playwright dependencies
      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          playwright install --with-deps

      # Run unit, integration, and end-to-end (E2E) tests
      - name: Run tests
        run: |
          source venv/bin/activate
          pytest tests/unit/ --cov=app --cov-report=term-missing --cov-fail-under=90
          pytest tests/integration/
          pytest tests/e2e/

  # --------------------------------------------------------
  # SECURITY JOB — Scans Docker image for vulnerabilities
  # --------------------------------------------------------
  security:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Build Docker image for scanning
        run: docker build -t app:test .
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'app:test'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

  # --------------------------------------------------------
  # DEPLOY JOB — Push Docker image to DockerHub
  # --------------------------------------------------------
  deploy:
    needs: security
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx (for multi-platform builds)
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push Docker image to DockerHub
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            nandanksingh/module8_fastapi_calculator:latest
            nandanksingh/module8_fastapi_calculator:${{ github.sha }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=nandanksingh/module8_fastapi_calculator:cache
          cache-to: type=inline,mode=max
